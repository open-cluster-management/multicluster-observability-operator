apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: multiclusterobservabilities.observability.open-cluster-management.io
spec:
  group: observability.open-cluster-management.io
  names:
    kind: MultiClusterObservability
    listKind: MultiClusterObservabilityList
    plural: multiclusterobservabilities
    shortNames:
    - mco
    singular: multiclusterobservability
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: MultiClusterObservability defines the configuration for the Observability
          installation on Hub and Managed Clusters all through this one custom resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MultiClusterObservabilitySpec defines the desired state of
              MultiClusterObservability
            properties:
              availabilityConfig:
                default: High
                description: 'ReplicaCount for HA support. Does not affect data stores.
                  Enabled will toggle HA support. This will provide better support
                  in cases of failover but consumes more resources. Options are: Basic
                  and High (default).'
                type: string
              enableDownSampling:
                default: false
                description: Enable or disable the downsample. The default value is
                  false. This is not recommended as querying long time ranges without
                  non-downsampled data is not efficient and useful.
                type: boolean
              imagePullPolicy:
                default: Always
                description: Pull policy of the MultiClusterObservability images
                type: string
              imagePullSecret:
                default: multiclusterhub-operator-pull-secret
                description: Pull secret of the MultiClusterObservability images
                type: string
              nodeSelector:
                additionalProperties:
                  type: string
                description: Spec of NodeSelector
                type: object
              observabilityAddonSpec:
                description: The ObservabilityAddonSpec defines the global settings
                  for all managed clusters which have observability add-on enabled.
                properties:
                  enableMetrics:
                    default: true
                    description: EnableMetrics indicates the observability addon push
                      metrics to hub server.
                    type: boolean
                  interval:
                    default: 30
                    description: Interval for the observability addon push metrics
                      to hub server.
                    format: int32
                    maximum: 3600
                    minimum: 15
                    type: integer
                type: object
              retentionResolution1h:
                default: 30d
                description: How long to retain samples of resolution 2 (1 hour) in
                  bucket.
                type: string
              retentionResolution5m:
                default: 14d
                description: How long to retain samples of resolution 1 (5 minutes)
                  in bucket.
                type: string
              retentionResolutionRaw:
                default: 5d
                description: How long to retain raw samples in a bucket.
                type: string
              storageConfigObject:
                description: Specifies the storage to be used by Observability
                properties:
                  compactStatefulSetSize:
                    default: 10Gi
                    description: CompactStatefulSetSize defines the amount of storage
                      for the thanos compact component.
                    type: string
                  metricObjectStorage:
                    description: Object store config secret for metrics
                    properties:
                      key:
                        description: The key of the secret to select from. Must be
                          a valid secret key. Refer to https://thanos.io/storage.md/#configuration
                          for a valid content of key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                    type: object
                  receiveStatefulSetSize:
                    default: 10Gi
                    description: ReceiveStatefulSetSize defines the amount of storage
                      for the thanos receiver component.
                    type: string
                  statefulSetSize:
                    default: 1Gi
                    description: The amount of storage applies to the Observability
                      stateful sets, i.e. Thanos store, Thanos rule and alertmanager.
                    type: string
                  statefulSetStorageClass:
                    default: gp2
                    description: Specify the storageClass Stateful Sets. This storage
                      class will also be used for Object Storage if MetricObjectStorage
                      was configured for the system to create the storage.
                    type: string
                type: object
            type: object
          status:
            description: MultiClusterObservabilityStatus defines the observed state
              of MultiClusterObservability
            properties:
              conditions:
                description: Represents the status of each deployment
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
